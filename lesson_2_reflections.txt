1. What happens when you initialize a repository? Why do you need to do it?
	Git creates it's own database files under .git folder. This shows to git that this folder is a repository
2 How is the staging area different from the working directory and the repository? What value do you think it offers?
	this is an fileter/intermediate step beetween working dirctory and repository
3 How can you use the staging area to make sure you have one commit per logical change?
	put related changes to logical change to staging area, when finished just commit it
4 What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	a good place for branching is triing a new feature, without changing the master 
5 How do the diagrams help you visualize the branch structure?
	understand that commits are not linear
6 What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	result is the origin branch whcih includes all commit from merged branch as well, that is better to understand haw it is working
7 What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	dev decide the time when to merge, also he is concious of resolving the conflicts